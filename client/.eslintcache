[{"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\index.js":"1","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\reportWebVitals.js":"2","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\App.js":"3","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\components\\navbar\\Navbar.js":"4","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\components\\home\\Home.js":"5","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\products\\MensWear.js":"6","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\products\\WomensWear.js":"7","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\products\\UploadProduct.js":"8","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\products\\KidsWear.js":"9","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\orders\\Cart.js":"10","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\users\\UserProfile.js":"11","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\users\\UserRegister.js":"12","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\users\\UserLogin.js":"13","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\store.js":"14","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\root.reducer.js":"15","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\alert\\alert.reducer.js":"16","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\alert\\alert.actions.js":"17","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\users\\user.reducers.js":"18","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\users\\user.actions.js":"19","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\util\\alert\\Alert.js":"20","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\util\\userUtil.js":"21","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\util\\tokenUtil.js":"22","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\products\\product.reducer.js":"23","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\products\\product.actions.js":"24","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\util\\spinner\\Spinner.js":"25","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\products\\ProductDetails.js":"26","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\orders\\order.reducer.js":"27","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\orders\\order.actions.js":"28","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\orders\\CheckOut.js":"29","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\orders\\OrderSuccess.js":"30","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\orders\\OrderList.js":"31","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\util\\PrivateRoute.js":"32"},{"size":770,"mtime":1608044779458,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":2491,"mtime":1609256928951,"results":"36","hashOfConfig":"34"},{"size":3987,"mtime":1609255768449,"results":"37","hashOfConfig":"34"},{"size":878,"mtime":1607959329304,"results":"38","hashOfConfig":"34"},{"size":4181,"mtime":1608220971415,"results":"39","hashOfConfig":"34"},{"size":4192,"mtime":1608221061494,"results":"40","hashOfConfig":"34"},{"size":9585,"mtime":1609257601429,"results":"41","hashOfConfig":"34"},{"size":4183,"mtime":1608221055549,"results":"42","hashOfConfig":"34"},{"size":8264,"mtime":1608304807590,"results":"43","hashOfConfig":"34"},{"size":16990,"mtime":1608308503892,"results":"44","hashOfConfig":"34"},{"size":7529,"mtime":1608048547362,"results":"45","hashOfConfig":"34"},{"size":5035,"mtime":1608048373126,"results":"46","hashOfConfig":"34"},{"size":373,"mtime":1608044684309,"results":"47","hashOfConfig":"34"},{"size":564,"mtime":1608219130817,"results":"48","hashOfConfig":"34"},{"size":695,"mtime":1608045651642,"results":"49","hashOfConfig":"34"},{"size":541,"mtime":1608045808829,"results":"50","hashOfConfig":"34"},{"size":3149,"mtime":1608306616151,"results":"51","hashOfConfig":"34"},{"size":4566,"mtime":1608131197179,"results":"52","hashOfConfig":"34"},{"size":1304,"mtime":1608048053435,"results":"53","hashOfConfig":"34"},{"size":220,"mtime":1608131017533,"results":"54","hashOfConfig":"34"},{"size":242,"mtime":1608131040344,"results":"55","hashOfConfig":"34"},{"size":3168,"mtime":1608219063557,"results":"56","hashOfConfig":"34"},{"size":5167,"mtime":1608217163574,"results":"57","hashOfConfig":"34"},{"size":318,"mtime":1608134854729,"results":"58","hashOfConfig":"34"},{"size":5060,"mtime":1608304455306,"results":"59","hashOfConfig":"34"},{"size":4724,"mtime":1609256344329,"results":"60","hashOfConfig":"34"},{"size":5403,"mtime":1609256236606,"results":"61","hashOfConfig":"34"},{"size":11838,"mtime":1609253906451,"results":"62","hashOfConfig":"34"},{"size":8748,"mtime":1609255210628,"results":"63","hashOfConfig":"34"},{"size":6501,"mtime":1609256830014,"results":"64","hashOfConfig":"34"},{"size":381,"mtime":1607525865978,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1o9lo0d",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\index.js",[],["137","138"],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\reportWebVitals.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\App.js",["139"],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\components\\navbar\\Navbar.js",["140"],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\components\\home\\Home.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\products\\MensWear.js",["141","142"],"import React, {useEffect} from 'react';\r\nimport product from '../../assets/img/products/mens/men_2.jpg'\r\nimport * as orderActions from '../../redux/orders/order.actions';\r\nimport * as productActions from '../../redux/products/product.actions';\r\nimport * as productReducer from '../../redux/products/product.reducer';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Spinner from \"../../layout/util/spinner/Spinner\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nlet MensWear = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    // get products data from the REDUX Store\r\n    let productInfo = useSelector((state) => {\r\n        return state[productReducer.productFeatureKey];\r\n    });\r\n\r\n    let {loading , products} = productInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(productActions.getMenProducts());\r\n    }, []);\r\n\r\n    let clickAddToCart = (product) => {\r\n        product.qty = 1;\r\n        dispatch(orderActions.addToCart(product , history));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"bg-brown text-dark p-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h3>Men's Wear</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                        {\r\n                            products.length > 0 ?\r\n                                <React.Fragment>\r\n                                    <section>\r\n                                        <div className=\"container mt-3\">\r\n                                            <div className=\"row\">\r\n                                                {\r\n                                                    products.map(product => {\r\n                                                        return (\r\n                                                            <div className=\"col-md-3\" key={product._id}>\r\n                                                                <div className=\"card\">\r\n                                                                    <div className=\"card-header bg-white text-center\">\r\n                                                                        <Link to={`/products/${product._id}`}>\r\n                                                                            <img src={product.image} alt=\"\"/>\r\n                                                                        </Link>\r\n                                                                    </div>\r\n                                                                    <div className=\"card-body text-center\">\r\n                                                                        <small className=\"lead font-weight-bold\">{product.name}</small><br/>\r\n                                                                        <small className=\"lead font-weight-bold\">{product.brand}</small><br/>\r\n                                                                        <small className=\"font-weight-bold\">&#8377; {product.price.toFixed(2)}</small><br/>\r\n                                                                        <button onClick={clickAddToCart.bind(this, product)} className=\"btn btn-brown text-dark btn-sm\">Add to Cart</button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </section>\r\n                                </React.Fragment> : null\r\n                        }\r\n                    </React.Fragment>\r\n            }\r\n\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default MensWear;","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\products\\WomensWear.js",["143","144"],"import React, {useEffect} from 'react';\r\nimport product from \"../../assets/img/products/women/women_7.jpg\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as productReducer from \"../../redux/products/product.reducer\";\r\nimport * as productActions from \"../../redux/products/product.actions\";\r\nimport Spinner from \"../../layout/util/spinner/Spinner\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport * as orderActions from \"../../redux/orders/order.actions\";\r\n\r\nlet WomensWear = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    // get products data from the REDUX Store\r\n    let productInfo = useSelector((state) => {\r\n        return state[productReducer.productFeatureKey];\r\n    });\r\n\r\n    let {loading , products} = productInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(productActions.getWomenProducts());\r\n    }, []);\r\n\r\n    let clickAddToCart = (product) => {\r\n        product.qty = 1;\r\n        dispatch(orderActions.addToCart(product , history));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"bg-brown text-dark p-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h3>Women's Wear</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                        {\r\n                            products.length > 0 ?\r\n                                <React.Fragment>\r\n                                    <section>\r\n                                        <div className=\"container mt-3\">\r\n                                            <div className=\"row\">\r\n                                                {\r\n                                                    products.map(product => {\r\n                                                        return (\r\n                                                            <div className=\"col-md-3\" key={product._id}>\r\n                                                                <div className=\"card\">\r\n                                                                    <div className=\"card-header bg-white text-center\">\r\n                                                                        <Link to={`/products/${product._id}`}>\r\n                                                                            <img src={product.image} alt=\"\"/>\r\n                                                                        </Link>\r\n                                                                    </div>\r\n                                                                    <div className=\"card-body text-center\">\r\n                                                                        <small className=\"lead font-weight-bold\">{product.name}</small><br/>\r\n                                                                        <small className=\"lead font-weight-bold\">{product.brand}</small><br/>\r\n                                                                        <small className=\"font-weight-bold\">&#8377; {product.price.toFixed(2)}</small><br/>\r\n                                                                        <button onClick={clickAddToCart.bind(this,product)} className=\"btn btn-brown text-dark btn-sm\">Add to Cart</button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </section>\r\n                                </React.Fragment> : null\r\n                        }\r\n                    </React.Fragment>\r\n            }\r\n\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default WomensWear;","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\products\\UploadProduct.js",["145"],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\products\\KidsWear.js",["146","147"],"import React, {useEffect} from 'react';\r\nimport product from \"../../assets/img/products/kids/kid_12.jpg\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as productReducer from \"../../redux/products/product.reducer\";\r\nimport * as productActions from \"../../redux/products/product.actions\";\r\nimport Spinner from \"../../layout/util/spinner/Spinner\";\r\nimport {Link,useHistory} from \"react-router-dom\";\r\nimport * as orderActions from \"../../redux/orders/order.actions\";\r\n\r\nlet KidsWear = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    // get products data from the REDUX Store\r\n    let productInfo = useSelector((state) => {\r\n        return state[productReducer.productFeatureKey];\r\n    });\r\n\r\n    let {loading , products} = productInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(productActions.getKidsProducts());\r\n    }, []);\r\n\r\n    let clickAddToCart = (product) => {\r\n        product.qty = 1;\r\n        dispatch(orderActions.addToCart(product , history));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"bg-brown text-dark p-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h3>Kid's Wear</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                        {\r\n                            products.length > 0 ?\r\n                                <React.Fragment>\r\n                                    <section>\r\n                                        <div className=\"container mt-3\">\r\n                                            <div className=\"row\">\r\n                                                {\r\n                                                    products.map(product => {\r\n                                                        return (\r\n                                                            <div className=\"col-md-3\" key={product._id}>\r\n                                                                <div className=\"card\">\r\n                                                                    <div className=\"card-header bg-white text-center\">\r\n                                                                        <Link to={`/products/${product._id}`}>\r\n                                                                            <img src={product.image} alt=\"\"/>\r\n                                                                        </Link>\r\n                                                                    </div>\r\n                                                                    <div className=\"card-body text-center\">\r\n                                                                        <small className=\"lead font-weight-bold\">{product.name}</small><br/>\r\n                                                                        <small className=\"lead font-weight-bold\">{product.brand}</small><br/>\r\n                                                                        <small className=\"font-weight-bold\">&#8377; {product.price.toFixed(2)}</small><br/>\r\n                                                                        <button onClick={clickAddToCart.bind(this, product)} className=\"btn btn-brown text-dark btn-sm\">Add to Cart</button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </section>\r\n                                </React.Fragment> : null\r\n                        }\r\n                    </React.Fragment>\r\n            }\r\n\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default KidsWear;","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\orders\\Cart.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\users\\UserProfile.js",["148"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as userActions from '../../redux/users/user.actions';\r\nimport * as userReducer from '../../redux/users/user.reducers';\r\nimport Spinner from \"../../layout/util/spinner/Spinner\";\r\n\r\nlet UserProfile = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    let [enableAddress , setEnableAddress] = useState(false);\r\n\r\n    // Get User Info from the REDUX Store\r\n    let userInfo = useSelector((state) => {\r\n        return state[userReducer.userFeatureKey]\r\n    });\r\n\r\n    let {loading , user} = userInfo;\r\n\r\n    let [address , setAddress] = useState({\r\n        flat : '',\r\n        street : '',\r\n        landmark : '',\r\n        city : '',\r\n        state : '',\r\n        country : '',\r\n        pin : '',\r\n        mobile : ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        setAddress({\r\n            flat : user && user.address ? user.address.flat : '',\r\n            street : user && user.address ? user.address.street : '',\r\n            landmark : user && user.address ? user.address.landmark : '',\r\n            city : user && user.address ? user.address.city : '',\r\n            state : user && user.address ? user.address.state : '',\r\n            country : user && user.address ? user.address.country : '',\r\n            pin : user && user.address ? user.address.pin : '',\r\n            mobile : user && user.address ? user.address.mobile : '',\r\n        });\r\n    }, [user]);\r\n\r\n    let updateInputAddress = (e) => {\r\n        setAddress({\r\n            ...address,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    };\r\n\r\n    let submitUpdateAddress = () => {\r\n        dispatch(userActions.updateAddress(address));\r\n        setEnableAddress(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"bg-brown text-dark p-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h3>\r\n                                <i className=\"fa fa-user-circle\"/> Your Profile</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                        {\r\n                            Object.keys(user).length > 0 &&\r\n                            <section>\r\n                                <div className=\"container mt-3\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <img src={user.avatar} className=\"img-fluid rounded-circle profile-img\"/>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-header bg-dark text-brown\">\r\n                                                    <p className=\"h4\">Your Information</p>\r\n                                                </div>\r\n                                                <div className=\"card-body bg-brown\">\r\n                                                    <ul className=\"list-group\">\r\n                                                        <li className=\"list-group-item\">\r\n                                                            NAME : <span className=\"font-weight-bold\">{user.name}</span>\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Email : <span className=\"font-weight-bold\">{user.email}</span>\r\n                                                        </li>\r\n                                                        {\r\n                                                            user.address &&\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Mobile : <span className=\"font-weight-bold\">{user.address.mobile}</span>\r\n                                                            </li>\r\n                                                        }\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card mt-3\">\r\n                                                <div className=\"card-header bg-dark text-brown\">\r\n                                                    <span className=\"h4\">Billing Address</span>\r\n                                                    <div className=\"custom-control custom-switch float-right\">\r\n                                                        <input\r\n                                                            onChange={e => setEnableAddress(e.target.checked)}\r\n                                                            type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\"/>\r\n                                                        <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">Enable Address</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {\r\n                                                    user.address && !enableAddress &&\r\n                                                    <div className=\"card-body bg-brown\">\r\n                                                        <ul className=\"list-group\">\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Flat : {user.address.flat}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Street : {user.address.street}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Landmark : {user.address.landmark}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                City : {user.address.city}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                State : {user.address.state}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Country : {user.address.country}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                PinCode : {user.address.pin}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Mobile : {user.address.mobile}\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    user.address && enableAddress &&\r\n                                                        <div className=\"card-body bg-brown\">\r\n                                                            <form onSubmit={submitUpdateAddress}>\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <span className=\"input-group-text bg-dark text-brown\" >Flat</span>\r\n                                                                    </div>\r\n                                                                    <input\r\n                                                                        name=\"flat\"\r\n                                                                        value={address.flat}\r\n                                                                        onChange={updateInputAddress}\r\n                                                                        type=\"text\" className=\"form-control\"/>\r\n                                                                </div>\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <span className=\"input-group-text bg-dark text-brown\" >Street</span>\r\n                                                                    </div>\r\n                                                                    <input\r\n                                                                        name=\"street\"\r\n                                                                        value={address.street}\r\n                                                                        onChange={updateInputAddress}\r\n                                                                        type=\"text\" className=\"form-control\"/>\r\n                                                                </div>\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <span className=\"input-group-text bg-dark text-brown\" >Landmark</span>\r\n                                                                    </div>\r\n                                                                    <input\r\n                                                                        name=\"landmark\"\r\n                                                                        value={address.landmark}\r\n                                                                        onChange={updateInputAddress}\r\n                                                                        type=\"text\" className=\"form-control\"/>\r\n                                                                </div>\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <span className=\"input-group-text bg-dark text-brown\" >City</span>\r\n                                                                    </div>\r\n                                                                    <input\r\n                                                                        name=\"city\"\r\n                                                                        value={address.city}\r\n                                                                        onChange={updateInputAddress}\r\n                                                                        type=\"text\" className=\"form-control\"/>\r\n                                                                </div>\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <span className=\"input-group-text bg-dark text-brown\" >State</span>\r\n                                                                    </div>\r\n                                                                    <input\r\n                                                                        name=\"state\"\r\n                                                                        value={address.state}\r\n                                                                        onChange={updateInputAddress}\r\n                                                                        type=\"text\" className=\"form-control\"/>\r\n                                                                </div>\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <span className=\"input-group-text bg-dark text-brown\" >Country</span>\r\n                                                                    </div>\r\n                                                                    <input\r\n                                                                        name=\"country\"\r\n                                                                        value={address.country}\r\n                                                                        onChange={updateInputAddress}\r\n                                                                        type=\"text\" className=\"form-control\"/>\r\n                                                                </div>\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <span className=\"input-group-text bg-dark text-brown\" >Pincode</span>\r\n                                                                    </div>\r\n                                                                    <input\r\n                                                                        name=\"pin\"\r\n                                                                        value={address.pin}\r\n                                                                        onChange={updateInputAddress}\r\n                                                                        type=\"text\" className=\"form-control\"/>\r\n                                                                </div>\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <span className=\"input-group-text bg-dark text-brown\" >Mobile</span>\r\n                                                                    </div>\r\n                                                                    <input\r\n                                                                        name=\"mobile\"\r\n                                                                        value={address.mobile}\r\n                                                                        onChange={updateInputAddress}\r\n                                                                        type=\"text\" className=\"form-control\"/>\r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    <input type=\"submit\" className=\"btn btn-dark text-brown btn-sm\" value=\"Update\"/>\r\n                                                                </div>\r\n                                                            </form>\r\n                                                        </div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        }\r\n                    </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default UserProfile;","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\users\\UserRegister.js",["149"],"import React, {useState} from 'react';\r\nimport brand from '../../assets/img/brand.PNG';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as alertActions from '../../redux/alert/alert.actions';\r\nimport * as userActions from '../../redux/users/user.actions';\r\nimport {setAlert} from \"../../redux/alert/alert.actions\";\r\n\r\n\r\nlet UserRegister = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    let [user , setUser] = useState({\r\n        name : '',\r\n        email : '',\r\n        password : '',\r\n        confirmPassword : ''\r\n    });\r\n\r\n    let [userError , setUserError] = useState({\r\n        nameError : '',\r\n        emailError : '',\r\n        passwordError : '',\r\n        confirmPasswordError : ''\r\n    });\r\n\r\n    let validateUsername = (event) => {\r\n        setUser({...user , name : event.target.value});\r\n        let regExp = /^[a-zA-Z0-9_]{4,16}$/;\r\n        !regExp.test(event.target.value) ?\r\n            setUserError({...userError , nameError: 'Enter a proper Username'})\r\n            : setUserError({...userError , nameError: ''});\r\n    }\r\n\r\n    let validateEmail = (event) => {\r\n        setUser({...user , email : event.target.value});\r\n        let regExp = /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        !regExp.test(event.target.value) ?\r\n            setUserError({...userError , emailError: 'Enter a proper Email'})\r\n            : setUserError({...userError , emailError: ''});\r\n    }\r\n\r\n    let validatePassword = (event) => {\r\n        setUser({...user , password : event.target.value});\r\n        let regExp = /^[A-Za-z]\\w{7,14}$/;\r\n        !regExp.test(event.target.value) ?\r\n            setUserError({...userError , passwordError: 'Enter a proper Password'})\r\n            : setUserError({...userError , passwordError: ''});\r\n    }\r\n\r\n    let validateConfirmPassword = (event) => {\r\n        setUser({...user , confirmPassword : event.target.value});\r\n        (user.password !== event.target.value) ?\r\n            setUserError({...userError , confirmPasswordError: 'Passwords Not Matched'})\r\n            : setUserError({...userError , confirmPasswordError: ''});\r\n    }\r\n\r\n    let submitRegistration = (e) => {\r\n        e.preventDefault();\r\n\r\n        let {name , email , password , confirmPassword} = user;\r\n        if(name !== '' && email !== '' && password !== '' && confirmPassword !== ''){\r\n            dispatch(userActions.registerUser(user , history));\r\n        }\r\n        else{\r\n            dispatch(setAlert('Please Fill in the Fields' , 'danger'));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"bg-brown text-dark p-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h3>\r\n                                <i className=\"fa fa-user-cog\"/> Register a User</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/*<pre>{JSON.stringify(user)}</pre>\r\n            <pre>{JSON.stringify(userError)}</pre>*/}\r\n            <section>\r\n                <div className=\"container mt-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 m-auto\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header bg-dark text-brown\">\r\n                                    <p className=\"h4\">Register Here</p>\r\n                                </div>\r\n                                <div className=\"card-body bg-form-light\">\r\n                                    <form onSubmit={submitRegistration}>\r\n                                        <div className=\"form-group\">\r\n                                            <input\r\n                                                name=\"name\"\r\n                                                value={user.name}\r\n                                                onChange={validateUsername}\r\n                                                type=\"text\" className={`form-control ${userError.nameError.length > 0 ? 'is-invalid' : ''}`} placeholder=\"Name\"/>\r\n                                            {userError.nameError.length > 0 ? <small className=\"text-danger\">{userError.nameError}</small> : ''}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input\r\n                                                name=\"email\"\r\n                                                value={user.email}\r\n                                                onChange={validateEmail}\r\n                                                type=\"email\" className={`form-control ${userError.emailError.length > 0 ? 'is-invalid' : ''}`} placeholder=\"Email\"/>\r\n                                            {userError.emailError.length > 0 ? <small className=\"text-danger\">{userError.emailError}</small> : ''}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input\r\n                                                name=\"password\"\r\n                                                value={user.password}\r\n                                                onChange={validatePassword}\r\n                                                type=\"password\" className={`form-control ${userError.passwordError.length > 0 ? 'is-invalid' : ''}`} placeholder=\"Password\"/>\r\n                                            {userError.passwordError.length > 0 ? <small className=\"text-danger\">{userError.passwordError}</small> : ''}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input\r\n                                                name=\"confirmPassword\"\r\n                                                value={user.confirmPassword}\r\n                                                onChange={validateConfirmPassword}\r\n                                                type=\"password\" className={`form-control ${userError.confirmPasswordError.length > 0 ? 'is-invalid' : ''}`} placeholder=\"Confirm Password\"/>\r\n                                            {userError.confirmPasswordError.length > 0 ? <small className=\"text-danger\">{userError.confirmPasswordError}</small> : ''}\r\n                                        </div>\r\n                                        <div>\r\n                                            <input type=\"submit\" className=\"btn btn-dark btn-sm text-brown\" value=\"Register\"/>\r\n                                        </div>\r\n                                    </form>\r\n                                    <small>Already have an account ?\r\n                                        <Link to=\"/users/login\" className=\"font-weight-bold\">{' '} Login</Link>\r\n                                    </small>\r\n                                </div>\r\n                                <div className=\"card-footer text-center bg-dark\">\r\n                                    <img src={brand} alt=\"\" width=\"180\" height=\"40\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default UserRegister;","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\users\\UserLogin.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\store.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\root.reducer.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\alert\\alert.reducer.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\alert\\alert.actions.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\users\\user.reducers.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\users\\user.actions.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\util\\alert\\Alert.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\util\\userUtil.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\util\\tokenUtil.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\products\\product.reducer.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\products\\product.actions.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\util\\spinner\\Spinner.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\products\\ProductDetails.js",["150"],"import React, {useEffect, useState} from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport * as productActions from '../../redux/products/product.actions';\r\nimport * as productReducer from '../../redux/products/product.reducer';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Spinner from \"../../layout/util/spinner/Spinner\";\r\nimport * as orderActions from '../../redux/orders/order.actions';\r\n\r\nlet ProductDetails = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    let [selectedQty , setSelectedQty] = useState('');\r\n\r\n    let productId = useParams().productId;\r\n\r\n    let selectedProductInfo = useSelector((state) => {\r\n        return state[productReducer.productFeatureKey];\r\n    });\r\n\r\n    let {loading , selectedProduct} = selectedProductInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(productActions.getProduct(productId))\r\n    }, [productId]);\r\n\r\n    let submitAddToCart = (event) => {\r\n        event.preventDefault();\r\n        selectedProduct.qty = (selectedQty !== '') ? Number(selectedQty) : 1;\r\n        dispatch(orderActions.addToCart(selectedProduct, history));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"bg-brown text-dark p-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h3>Your Selected Product</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                        <section className=\"mt-4\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        Object.keys(selectedProduct).length > 0 &&\r\n                                        <React.Fragment>\r\n                                            <div className=\"col-md-4 text-center\">\r\n                                                <img src={selectedProduct.image} alt=\"\" className=\"img-fluid product-img\"/>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <p className=\"h3\">NAME : {selectedProduct.name}</p>\r\n                                                <p className=\"h5\">Brand : {selectedProduct.brand}</p>\r\n                                                <p className=\"h5\">Price :\r\n                                                    <span className=\"font-weight-bold\">&#8377;{selectedProduct.price.toFixed(2)}</span>\r\n                                                </p>\r\n                                                <div>\r\n                                                    <form className=\"form-inline\" onSubmit={submitAddToCart}>\r\n                                                        <div className=\"form-group\">\r\n                                                            <select\r\n                                                                value={selectedQty}\r\n                                                                onChange={e => setSelectedQty(e.target.value)}\r\n                                                                className=\"form-control\">\r\n                                                                <option value=\"\">Select a Qty</option>\r\n                                                                <option value=\"1\">1</option>\r\n                                                                <option value=\"2\">2</option>\r\n                                                                <option value=\"3\">3</option>\r\n                                                                <option value=\"4\">4</option>\r\n                                                                <option value=\"5\">5</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <input type=\"submit\" className=\"btn btn-brown btn-sm text-dark\" value=\"Add to Cart\"/>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                                <p>{selectedProduct.usage}</p>\r\n                                                <p>{selectedProduct.description}</p>\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default ProductDetails;","D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\orders\\order.reducer.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\redux\\orders\\order.actions.js",["151"],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\orders\\CheckOut.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\orders\\OrderSuccess.js",[],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\modules\\orders\\OrderList.js",["152"],"D:\\Workspace\\React_JS_Online_Evening_2020\\online-shopping\\client\\src\\layout\\util\\PrivateRoute.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":31,"column":8,"nodeType":"159","endLine":31,"endColumn":10,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":23,"column":10,"nodeType":"163","messageId":"164","endLine":23,"endColumn":25},{"ruleId":"161","severity":1,"message":"165","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":23,"column":8,"nodeType":"159","endLine":23,"endColumn":10,"suggestions":"166"},{"ruleId":"161","severity":1,"message":"165","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":23,"column":8,"nodeType":"159","endLine":23,"endColumn":10,"suggestions":"167"},{"ruleId":"161","severity":1,"message":"168","line":13,"column":17,"nodeType":"163","messageId":"164","endLine":13,"endColumn":24},{"ruleId":"161","severity":1,"message":"165","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":23,"column":8,"nodeType":"159","endLine":23,"endColumn":10,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":77,"column":45,"nodeType":"172","endLine":77,"endColumn":118},{"ruleId":"161","severity":1,"message":"173","line":5,"column":13,"nodeType":"163","messageId":"164","endLine":5,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":25,"column":8,"nodeType":"159","endLine":25,"endColumn":19,"suggestions":"174"},{"ruleId":"161","severity":1,"message":"173","line":2,"column":13,"nodeType":"163","messageId":"164","endLine":2,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":19,"column":8,"nodeType":"159","endLine":19,"endColumn":10,"suggestions":"175"},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["178"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'product' is defined but never used.",["179"],["180"],"'loading' is assigned a value but never used.",["181"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'alertActions' is defined but never used.",["182"],["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"184","fix":"187"},{"desc":"184","fix":"188"},{"desc":"189","fix":"190"},{"desc":"184","fix":"191"},"Update the dependencies array to be: [dispatch]",{"range":"192","text":"193"},{"range":"194","text":"193"},{"range":"195","text":"193"},{"range":"196","text":"193"},"Update the dependencies array to be: [dispatch, productId]",{"range":"197","text":"198"},{"range":"199","text":"193"},[1306,1308],"[dispatch]",[871,873],[879,881],[873,875],[912,923],"[dispatch, productId]",[624,626]]